// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

enum QuestionType {
  DARE
  NHIE
  TRUTH
  WYR
  PARANOIA
}

enum Rating {
  PG
  PG13
  R
}

enum Translation {
  bn
  de
  es
  fr
  hi
  tl
}

type QuestionTranslation {
  bn String?
  de String?
  es String?
  fr String?
  hi String?
  tl String?
}

enum QuestionPack {
  BOOST
  MEMORIES
  PERSONALITY
  LIFE
  FUTURE
  RELATIONSHIPS
  OPINIONS
}

enum ScheduleType {
  DAILY
  HOURLY
}

model ChannelSettings {
  id              String   @id @map("_id")
  disabledRatings Rating[]
  muted           Boolean
}

model GuildSettings {
  id                    String         @id @map("_id")
  disableGlobals        Boolean
  disableButtons        Boolean
  disabledQuestions     String[]
  showParanoiaFrequency Int
  language              Translation?
  packEntitlements      QuestionPack[]
}

model Question {
  id           String              @id @map("_id")
  type         QuestionType
  rating       Rating
  question     String
  translations QuestionTranslation
  pack         QuestionPack?
}

model ParanoiaQuestion {
  id             String  @id @map("_id")
  questionText   String
  questionRating Rating
  questionId     String
  userId         String
  guildId        String
  channelId      String
  dmMessageId    String?
  time           Int
}

model CustomQuestion {
  id       String       @id @map("_id")
  guildId  String
  type     QuestionType
  rating   Rating
  question String
}

model ScheduledQuestionChannel {
  id         String        @id @map("_id")
  botId      String
  guildId    String
  schedule   ScheduleType
  role       String?
  type       QuestionType?
  rating     Rating?
  autoThread Boolean
}

model PremiumUser {
  id             String        @id @map("_id")
  totalDonated   Float
  premiumSlots   Int
  premiumServers String[]
  transactions   Transaction[]
}

model Transaction {
  id            String      @id @map("_id")
  amount        Float
  itemId        Int
  discordUserId String
  user          PremiumUser @relation(fields: [discordUserId], references: [id])
}
